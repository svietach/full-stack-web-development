{"version":3,"sources":["personService.js","index.js"],"names":["baseUrl","getAll","a","axios","get","create","newObject","post","catch","err","response","status","Error","data","message","deletePerson","id","delete","config","url","updatePerson","person","put","Filter","value","onChange","Persons","persons","newPhoneSearch","deletePersonHandler","map","name","indexOf","number","type","onClick","PersonForm","newName","newPhone","handleChangeName","handleChangePhone","handleAdd","Notification","className","color","App","useState","setPersons","setNewName","setNewPhone","setNewPhoneSearch","errorMessage","setErrorMessage","useEffect","console","log","findPerson","filter","isConfirmed","length","confirm","error","event","target","document","addEventListener","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.cbd2852b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons';\n\nexport const getAll = async () => {\n    return await axios.get(baseUrl);\n}\n\nexport const create = async (newObject) => {\n    try {\n        await axios.post(baseUrl, newObject).catch((err) => {\n            if (err.response.status === 404) {\n                throw new Error(err.response.data);\n            }\n            throw err;\n        });\n        return false;\n    } catch (error) {\n        // this is the way to access the error message\n        return error.message;\n    }\n}\n\nexport const deletePerson = async (id) => {\n    try {\n        await axios.delete(`${baseUrl}/${id}`).catch(err => {\n            if (err.response.status === 404) {\n                throw new Error(`${err.config.url} not found`);\n            }\n            throw err;\n        });\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport const updatePerson = async (person) => {\n    await axios.put(`${baseUrl}/${person.id}`, person);\n}","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport { create, getAll, deletePerson, updatePerson } from './personService.js';\nimport './index.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      filter shown with: <input value={value} onChange={onChange} />\n    </div>\n  );\n}\n\nconst Persons = ({ persons, newPhoneSearch, deletePersonHandler }) => {\n\n  return (\n    <div>\n      {persons.map((person) => {\n        if (person.name.indexOf(newPhoneSearch) > -1) {\n          return <p>{person.name} {person.number} <button type=\"button\" onClick={() => deletePersonHandler(person)}>delete</button></p>;\n        } else {\n          return null;\n        }\n      })}\n    </div>\n  );\n}\n\nconst PersonForm = ({ newName, newPhone, handleChangeName, handleChangePhone, handleAdd }) => {\n  return (\n    <form>\n      <div>\n        name: <input value={newName} onChange={handleChangeName} /><br />\n        number: <input value={newPhone} onChange={handleChangePhone} />\n      </div>\n      <div>\n        <button type=\"button\" onClick={handleAdd}>add</button>\n      </div>\n    </form>\n  );\n}\n\nconst Notification = ({ message }) => {\n  return (\n    <p className={`error-message-${message.color}`}>{message.message}</p>\n  );\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    { name: 'Arto Hellas' }\n  ])\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [newPhoneSearch, setNewPhoneSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState({});\n\n  useEffect(async () => {\n    const data = await getAll();\n    console.log(data.data);\n    setPersons(data.data);\n  }, []);\n\n  const deletePersonHandler = async (person) => {\n    const deleted = await deletePerson(person.id);\n    if (!deleted) {\n      setErrorMessage({ message: 'Information of ' + person.name + 'has already been removed from server', color: 'red' });\n    }\n    const data = await getAll();\n    setPersons(data.data);\n  }\n\n  const handleChangeName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleChangePhone = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  const addPerson = async (data) => {\n    await create(data);\n  }\n\n  const handleAdd = async () => {\n    const findPerson = persons.filter((person) => person.name === newName);\n    let isConfirmed = false;\n    if (!!findPerson.length) {\n      console.log(persons, findPerson);\n      // eslint-disable-next-line no-restricted-globals\n      isConfirmed = confirm(`${newName} is already added to phonebook, replace the old number with a new one ^_^`);\n    }\n\n    if (isConfirmed) {\n      await updatePerson({\n        id: findPerson[0].id,\n        name: newName,\n        number: newPhone,\n      });\n      setErrorMessage({ message: 'Updated ' + newName, color: 'green' });\n    }\n\n    if (!findPerson.length) {\n      const error = await create({\n        name: newName,\n        number: newPhone,\n      });\n\n      if (error) {\n        setErrorMessage({ message: error, color: 'red' });\n      } else {\n        setErrorMessage({ message: 'Added ' + newName, color: 'green' });\n      }\n\n    }\n\n    const data = await getAll();\n    setPersons(data.data);\n  }\n\n  const handleChangePhoneSearch = (event) => {\n    setNewPhoneSearch(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {!!errorMessage && <Notification message={errorMessage} />}\n      <Filter value={newPhoneSearch} onChange={handleChangePhoneSearch} />\n      <h2>add a new</h2>\n      <PersonForm newName={newName} handleChangeName={handleChangeName} handleChangePhone={handleChangePhone} handleAdd={handleAdd} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} newPhoneSearch={newPhoneSearch} deletePersonHandler={deletePersonHandler} />\n    </div>\n  )\n}\n\nexport default App;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<App />, document.querySelector('#root'));\n});\n"],"sourceRoot":""}